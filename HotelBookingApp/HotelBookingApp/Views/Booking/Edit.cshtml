@using HotelBookingApp.Models.Utils
@model Booking
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Edit Booking";
}

<h2>Edit Booking</h2>
<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id"/>
    <div class="mb-3">
        <label class="form-label">Customer Name</label>
        <input asp-for="CustomerName" class="form-control"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Customer NIC</label>
        <input asp-for="CustomerNic" class="form-control"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Number of Guests</label>
        <input asp-for="NumberOfGuests" class="form-control" type="number" min="1"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Room Type</label>
        <div class="chip-group">
            <label class="form-label">Room Types</label>
            <div class="mb-2">
                <select id="roomTypeSelect" class="form-select">
                    <option value="">Select Room Type</option>
                    @foreach (var roomType in Enum.GetValues(typeof(RoomType)))
                    {
                        <option value="@roomType">@roomType</option>
                    }
                </select>
                <button type="button" class="btn btn-secondary ms-2" onclick="addRoomType()">Add</button>
            </div>
            <div class="chip-group" id="roomTypeChips">
                @for (int i = 0; i < Model.RoomTypes.Count; i++)
                {
                    <span class="chip" id="chip-@i">
                        @Model.RoomTypes[i].RoomType
                        <button type="button" class="btn-close ms-1" aria-label="Remove"
                                onclick="removeRoomType(@i)"></button>
                    </span>
                }

            </div>
            @for (int i = 0; i < Model.RoomTypes.Count; i++)
            {
                <input type="hidden" name="RoomTypes[@i].Id" value="@Model.RoomTypes[i].Id"/>
                <input type="hidden" name="RoomTypes[@i].RoomType" value="@Model.RoomTypes[i].RoomType"/>
            }
        </div>
    </div>
    <div class="mb-3">
        <label class="form-label">Check-In</label>
        <input asp-for="CheckIn" class="form-control" type="date"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Check-Out</label>
        <input asp-for="CheckOut" class="form-control" type="date"/>
    </div>
    <div class="mb-3">
        <label class="form-label">Special Request</label>
        <input asp-for="SpecialRequest" class="form-control"/>
    </div>
    <div class="form-check mb-3">
        <input asp-for="IsRecurring" class="form-check-input" type="checkbox"/>
        <label class="form-check-label">Recurring</label>
    </div>
    <button type="submit" class="btn btn-primary">Update</button>
</form>

<script>
let roomTypeIndex = @Model.RoomTypes.Count;

function addRoomType() {
    const select = document.getElementById('roomTypeSelect');
    const selectedValue = select.value;
    if (!selectedValue) return;

    // Add chip
    const chip = document.createElement('span');
    chip.className = 'chip';
    chip.id = `chip-${roomTypeIndex}`;
    chip.innerHTML = `${selectedValue} <button type="button" class="btn-close ms-1" aria-label="Remove" onclick="removeRoomType(${roomTypeIndex})"></button>`;
    document.getElementById('roomTypeChips').appendChild(chip);

    // Add hidden inputs
    const container = document.querySelector('form');
    const inputId = document.createElement('input');
    inputId.type = 'hidden';
    inputId.name = `RoomTypes[${roomTypeIndex}].Id`;
    inputId.value = 0; // Default to 0, or whatever logic you use
    container.appendChild(inputId);

    const inputType = document.createElement('input');
    inputType.type = 'hidden';
    inputType.name = `RoomTypes[${roomTypeIndex}].RoomType`;
    inputType.value = selectedValue;
    container.appendChild(inputType);

    roomTypeIndex++;
}

function removeRoomType(index) {
    document.getElementById(`chip-${index}`)?.remove();
    document.querySelector(`input[name="RoomTypes[${index}].Id"]`)?.remove();
    document.querySelector(`input[name="RoomTypes[${index}].RoomType"]`)?.remove();
}
</script>
